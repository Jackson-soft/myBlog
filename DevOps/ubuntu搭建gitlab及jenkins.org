#+TITLE:  /Ubuntu/ 搭建 /gitlab/ 及 /Jenkins/ 纪录
* /Let's Encrypt/
** 安装客户端
#+BEGIN_SRC shell
sudo add-apt-repository ppa:certbot/certbot
sudo apt-get -y update
sudo apt-get install -y certbot
#+END_SRC
** 申请证书
#+BEGIN_SRC shell
certbot --agree-tos --email email@example.com certonly --webroot -w /opt/gitlab/embedded/service/gitlab-rails/public/ -d www.example.com
#+END_SRC

上述命令中：
 + --agree-tos
   同意用户协议。
 + --email
   首次申请证书时，需要邮箱地址来创建 Let's Encrypt 的账号。不过，并不会验证此账号。
邮箱地址用于接受证书过期提醒。
 + certonly
   只申请证书。
 + --webroot
   通过在当前运行的 web 服务器下存放验证文件来验证身份。
 + -w
   指定当前运行的 web 服务器的根目录。

对于通过 Omnibus 安装的 GitLab 的默认的 nginx 服务器的根目录位于 /opt/gitlab/embedded/service/gitlab-rails/public/。
 + -d
   指定要申请证书的域名。
* /Gitlib/
** 安装
*** 安装必要的组件
#+BEGIN_SRC shell
sudo apt-get install -y curl openssh-server ca-certificates postfix
#+END_SRC
*** 安装源
#+BEGIN_SRC shell
curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash
#+END_SRC
这里必须要吐槽一下， /gitlab/ 官方默认的安装指导是安装企业版 /gitlab-ee/ ，我们这里要安装的是开源版本 /gitlab-ce/ ，大家在安装
的时候要注意一下。
*** 安装包
#+BEGIN_SRC shell
sudo EXTERNAL_URL="https://gitlab.example.com" apt-get install gitlab-ce
#+END_SRC
** 与 /Let's Encrypt/ 集成
*** 配置文件
修改 //etc/gitlab/gitlab.rb/ 文件

#+BEGIN_SRC shell
letsencrypt['enable'] = true                      # GitLab 10.5 and 10.6 require this option
external_url "https://gitlab.example.com"         # Must use https protocol
letsencrypt['contact_emails'] = ['foo@email.com'] # Optional
#+END_SRC

*** 自动更新
#+BEGIN_SRC shell
letsencrypt['auto_renew'] = true
#+END_SRC

*** 启动新配置
#+BEGIN_SRC shell
sudo gitlab-ctl reconfigure
#+END_SRC
** 数据存放
一般情况是要给 /gitlab/ 单独挂载一个数据盘用来存放代码数据的。
*** 修改默认数据存放目录配置
/Gitlab/ 默然安装时，默认的仓库存储路径在 /var/opt/gitlab/git-data 目录下，仓库存储在子目录 /repositories/ 里面，可以通过修改
/etc/gitlab/gitlab.rb文件中 /git_data_dirs/ 参数来自定义父目录
#+begin_src shell
 git_data_dirs({
   "default" => {
     "path" => "/data0/gitlab/git-data"
    }
 })
#+end_src
我这里是把数据盘挂在 /data0/ 下面。

*注意 ：目标路径和其子路径必须不能为软链接。*
*** 生效配置
+ 没有数据
#+begin_src shell
# 停服
gitlab-ctl stop

# 重新配置服务
gitlab-ctl reconfigure
#+end_src
+ 已存在数据
#+begin_src shell
# 停服
gitlab-ctl stop

# 注意 'repositories'后面不带斜杠，而 '/home/gitlab-data'后面是有斜杠的
rsync -av /var/opt/gitlab/git-data/repositories /data0/gitlab/git-data/

gitlab-ctl reconfigure

# 开启服务
gitlab-ctl start
#+end_src
*** 数据备份
+ 修改备份目录
#+begin_src shell
gitlab_rails['manage_backup_path'] = true
gitlab_rails['backup_path'] = "/data0/gitlab/backups"
#+end_src
+ 生效配置
#+begin_src shell
gitlab-ctl reconfigure

gitlab-ctl restart
#+end_src
+ 创建备份
#+begin_src shell
gitlab-rake gitlab:backup:create
#+end_src
如果成功的话，在 //data0/gitlab/backups/ 目录下会生成  /1593744116_2020_07_03_13.1.1_gitlab_backup.tar/ 这么格式的一个文件
（时间戳+日期+版本号）。
*** 恢复备份
#+begin_src shell
# 从指定时间戳的备份恢复（backups目录下有多个备份文件时）
gitlab-rake gitlab:backup:restore BACKUP=1593744116

# 从默认备份恢复（backups目录下只有一个备份文件时）
gitlab-rake gitlab:backup:restore
#+end_src
* /Jenkins/
** 安装
#+BEGIN_SRC shell
wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > \
    /etc/apt/sources.list.d/jenkins.list'
sudo apt-get update
sudo apt install openjdk-11-jdk
sudo apt-get install -y jenkins
#+END_SRC
* 文档
+ [[https://about.gitlab.com/install/#ubuntu?version=ce][Download and install GitLab | GitLab]]
+ [[https://www.jenkins.io/doc/book/installing/#debianubuntu][Installing Jenkins]]
+ [[https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx][Certbot - Ubuntubionic Nginx]]
