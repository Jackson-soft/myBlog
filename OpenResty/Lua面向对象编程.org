#+TITLE: Lua 面向对象编程
* 模块
** 简单的模块
#+BEGIN_SRC lua
  local _M = {}

  _M.level = 1

  function _M.setLevel(le)
      _M.level = le
  end

  function _M.getLevel()
      return _M.level
  end

  return _M
#+END_SRC

我们假如上面的模块文件名叫 /pp.lua/ 的话。

调用方法如下：
#+BEGIN_SRC lua
  local pp = require("pp")

  pp.setLevel(4)

  print(pp.getLevel())
#+END_SRC
* 类
** 一个简单的例子
#+BEGIN_SRC lua
  local _M = {}

  local mt = { __index = _M }

  function _M.New(name,age)
      return setmetatable({name = name or "", age = age or 0}, mt)
  end

  function _M:GetName()
      return self.name
  end

  return _M
#+END_SRC

** 实例化
#+BEGIN_SRC lua
local s = pp.New("jacka", 33)

print(s:GetName())
#+END_SRC
* 私有函数
私有函数就是在 /Lua/ 的类里写带有 /local/ 属性的普通函数。但就是有一个问题，私有函数没法默认传入 /self/ 变量。
