#+TITLE: 定制 ~Emacs mode-line~
* 说明
一直都在用 [[https://github.com/seagle0128/doom-modeline][doom-modeline]] ， 比较简洁美观。最近在对配置做减法，所以想去掉一些自己用不到的信息。于是想着用一些内置的东西来定制一下 ~mode-line~ 。

定制的过程其实就是对 [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Mode-Line-Format.html][mode-line-format]] 变量做一些自定义的赋值。

* ~Mode Line~ 变量
- ~mode-line-mule-info~ : 显示当前语言环境、编码信息和输入法；
- ~mode-line-modified~ : 显示当前内容是否被修改，**表示已经被修改，--表示没有被修改，%%表示只读，%*表示只读但是被修改；
- ~mode-line-frame-identification~ : 用来标识当前窗口；
- ~mode-line-buffer-identification~ : 用来表示当前buffer；
- ~mode-line-position~ ：用来表示在buffer中的位置，可显示位置百分比、buffer大小、当前行号和列号；
- ~vc-mode~ ：显示版本管理信息；
- ~mode-line-modes~ ：显示当前major和minor modes；
- ~mode-line-remote~ ：用来显示当前buffer的default-directory是否是远程文件夹；
- ~mode-line-client~ ：用来表示emacsclient窗口；
- ~mode-name~ ： 显示当前buffer的major mode；
- ~mode-line-front-space~ ：显示在mode-line最前面；
- ~mode-line-end-spaces~ ：显示在mode-line最后面；
- ~mode-line-misc-info~ ：显示杂项信息；
- ~minor-mode-alis~ ：包含当前buffer激活的所有minor modes；
- ~global-mode-string~ ： 显示日期、时间、负载等一些辅助信息。

* 格式化标签

| 标签属性 | 输出                                            |
|----------+-------------------------------------------------|
| %b       | 当前的 ~buffer name~                              |
| %c       | 列号，左侧0起                                   |
| %C       | 列号，左侧1起                                   |
| %e       | 空                                              |
| %f       | 当前打开的文件名                                |
| %F       | 当前选择的窗口名                                |
| %i       | 当前 ~buffer~ 的大小                              |
| %I       | 带单位的 ~%i~                                     |
| %l       | 行号                                            |
| %n       | 缩放                                            |
| %o       | 窗口上方的文本占文本的百分比                    |
| %p ~or~ %P | 窗口顶部上方的缓冲文本百分比                                                |
| %m       | ~mode-name~                                       |
| %* ~or~ %+ | ~buffer~ 是只读显示为 %；修改显示 * ； 否则显示 - |
| %-       | 填充 ~mode line~ 用的                             |

* 配置
#+begin_src elisp
;; Mode line settings
(setq-default mode-line-format
              (list
               "%e"
               mode-line-front-space
               mode-line-modified
               " %1"
               ;; the buffer name; the file name as a tool tip
               '(:eval (propertize " %b " 'face 'font-lock-keyword-face
                                   'help-echo (buffer-file-name)))

               ;; line and column
               '(:eval (propertize " (%02l,%02c) " 'face 'font-lock-keyword-face))

               ;; relative position, size of file
               '(:eval (propertize " [%p/%I] " 'face 'font-lock-constant-face))

               ;; spaces to align right
               '(:eval (propertize
                        " " 'display
                        `((space :align-to (- (+ right right-fringe right-margin)
                                              ,70)))
                        'face 'mode-line))

               ;; global-mode-string goes in mode-line-misc-info
               '(:eval mode-line-misc-info)

               ;; buffer encode
               '(:eval (propertize (format " %s " buffer-file-coding-system) 'face 'font-lock-comment-face))

               ;; the current major mode
               '(:eval (propertize "%m" 'face 'font-lock-string-face))

               ;;minor-mode-alist

               ;; git info
               '(:eval '(vc-mode vc-mode))
               " "

               '(:eval
                 (when
                     (and (bound-and-true-p flycheck-mode)
                          (or flycheck-current-errors
                              (eq 'running flycheck-last-status-change)))
                   (pcase flycheck-last-status-change
                     ((\` not-checked) nil)
                     ((\` no-checker) (propertize " -" 'face 'warning))
                     ((\` running) (propertize " ✷" 'face 'success))
                     ((\` errored) (propertize " !" 'face 'error))
                     ((\` finished)
                      (let* ((error-counts (flycheck-count-errors flycheck-current-errors))
                             (no-errors (cdr (assq 'error error-counts)))
                             (no-warnings (cdr (assq 'warning error-counts)))
                             (face (cond (no-errors 'error)
                                         (no-warnings 'warning)
                                         (t 'success))))
                        (propertize (format "[%s/%s]" (or no-errors 0) (or no-warnings 0))
                                    'face face)))
                     ((\` interrupted) " -")
                     ((\` suspicious) '(propertize " ?" 'face 'warning)))))
               "%1 "

               'mode-line-end-spaces
               ))

(set-face-attribute 'mode-line nil
                    :background "#353644"
                    :foreground "white"
                    :box '(:line-width 6 :color "#353644")
                    :overline nil
                    :underline nil)

(set-face-attribute 'mode-line-inactive nil
                    :background "#565063"
                    :foreground "white"
                    :box '(:line-width 6 :color "#565063")
                    :overline nil
                    :underline nil)
#+end_src
* 文档
- [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Mode-Line.html][Mode Line]]
- [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Mode-Line-Format.html][Mode Line Format]]
