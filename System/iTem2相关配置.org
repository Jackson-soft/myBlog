
#+TITLE: /iTerm2/ 的配置
* /iTerm2/ 快捷键
+ ⌘ + Shift + E: 召唤时间线
+ ⌘ + Option + b: 时光机
+ ⌘ + T: 新Tab
+ ⌘ + D: 水平分屏
+ ⌘ + d: 垂直分屏
+ ⌘ + ] 、⌘ + [:  在最近使用的分屏直接切换
+ ⌘ + 方向键:  按方向切换标签页
+ ⌘ + Option + 方向键:  切换到指定位置的分屏
+ ⌘ + 数字: 切换标签页

* /zsh/
/zsh/ 的功能极其强大，但配置过于复杂，所以我用 [[https://github.com/sorin-ionescu/prezto][prezto]] 来管理插件。
** 安装
#+BEGIN_SRC shell
# install zsh
brew install zsh

# isntall prezto
git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto"

# configuration files
setopt EXTENDED_GLOB
for rcfile in "${ZDOTDIR:-$HOME}"/.zprezto/runcoms/^README.md(.N); do
  ln -s "$rcfile" "${ZDOTDIR:-$HOME}/.${rcfile:t}"
done

# Set Zsh as your default shell
chsh -s /bin/zsh
#+END_SRC
*说明* : ~zsh~ 目前在新版本的 ~Mac OS~ 中是默认自带的，不需要自行安装。
** 配置
在 /.zpreztorc/ 中修改如下配置
#+BEGIN_SRC conf
zstyle ':prezto:load' pmodule \
  'environment' \
  'terminal' \
  'editor' \
  'history' \
  'directory' \
  'spectrum' \
  'utility' \
  'completion' \
  'git' \
  'syntax-highlighting' \
  'history-substring-search' \
  'autosuggestions' \
  'prompt'
#+END_SRC
** 主题
[[https://github.com/romkatv/powerlevel10k][Powerlevel10k]] 是一款“花哨”的 /zsh/ 主题。但必须有 [[https://github.com/powerline/fonts][Powerline-Fonts]] 作为漂亮界面的支持，我使用的是 [[https://github.com/ryanoasis/nerd-fonts][Nerd-Fonts]] 字体，具体选择看大家个人的口味。
*** 安装
在 /.zpreztorc/ 中修改以下配置
#+BEGIN_SRC conf
zstyle :prezto:module:prompt theme powerlevel10k
#+END_SRC
*** 字体安装
#+BEGIN_SRC shell
brew tap homebrew/cask-fonts
brew install --cask font-fira-code-nerd-font
#+END_SRC
*** 配置
在 /.p10k.zsh/ 中修改下面的配置
#+BEGIN_SRC conf
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir dir_writable vcs)
#+END_SRC
*** ~vscode~ 相关配置
必须的字体安装：
#+BEGIN_SRC shell
# manjaro
yay -S nerd-fonts-fira-code
#+END_SRC

如果在 /vscode/ 的终端下也想使用 /Powerlevel10k/ 主题的话，要添加如下配置：
#+BEGIN_SRC json
"terminal.integrated.cursorBlinking": true,
"terminal.integrated.fontFamily": "FiraCode Nerd Font",
"terminal.integrated.fontSize": 14,
#+END_SRC
* /fzf/
[[https://github.com/junegunn/fzf][fzf]] 是一个模糊查找工具，其主要功能有查找文件、历史命令查询、快速进入目录。如果配合 /find/ 的替代命令 /fd/ 口感更佳。（目前我
用 [[https://github.com/lotabout/skim][skim]] 替换了 ~fzf~ ）
** 安装
#+BEGIN_SRC shell
# install fd & fzf
$ brew install fd fzf

# bind default key-binding
$ $(brew --prefix)/opt/fzf/install
$ . ~/.zshrc

# alter filefind to fd
$ vim ~/.zshenv
# Setting fd as the default source for fzf
export FZF_DEFAULT_COMMAND='fd --type f'
# To apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND=$FZF_DEFAULT_COMMAND
export FZF_ALT_C_COMMAND="fd -t d . "

$ . ~/.zshenv
#+END_SRC
** /fzf/ 里的快捷键
/fzf/ 的 /key-binding/ [[https://github.com/junegunn/fzf/wiki/Configuring-shell-key-bindings][wiki]]

在 /finder/（输出交换窗口）里:
+ Ctrl-J/Ctrl-K/Ctrl-N/Ctrlk-N可以用来将光标上下移动
+ Enter键用来选中条目， Ctrl-C/Ctrl-G/Esc用来退出
+ 在多选模式下（-m), TAB和Shift-TAB用来多选
+ Mouse: 上下滚动，选中，双击； /Shift-click/ 或 /shift-scoll/ 用于多选模式。
** 命令行下的快捷键
*** /CTRL-T/
在命令行下按下 /ctrl-t/ 会打开 /fzf/ 窗口，如果你选中某个条目并按下 /Enter/ ， 选中的条目会被拷贝到命令行上。

如果想同时预览文件内容，可以使用 /--preview/ 选项。

也可以用 /--select-1/ 和 /--exit-0/ 。

前者是如果只有一个条目，那么自动选中并退出 /fzf/ 。

后者是如果条目为空，自动退出。

上面两个选项对 /ALT-C/ 也有用。
*** /CTRL-R/
在命令行下按下 /ctrl-r/, /fzf/ 会列出 /history/ 命令，选中条目并离开 /fzf/ 的话， 选中条目会被拷到命令行上。
*** /ALT-C/
在命令行上按下 /alt-c/, 会列出当前文件夹下的目录，选中条目会自动进入到相应目录。
** 预览
/fzf/ 可以添加参数 /fzf --preview/ 完成对文件的预览。

#+BEGIN_SRC shell
# set alias
$ vim ~/.zshenv
alias pp='fzf --preview '"'"'[[ $(file --mime {}) =~ binary ]] && echo {} is a binary file || (highlight -O ansi -l {} || coderay {} || rougify {} || cat {}) 2> /dev/null | head -500'"'"
alias oo='fzf --preview '"'"'[[ $(file --mime {}) =~ binary ]] && echo {} is a binary file || (highlight -O ansi -l {} || coderay {} || rougify {} || tac {}) 2> /dev/null | head -500'"'"  # flashback
$ . ~/.zshenv
#+END_SRC

设置完别名之后,利用 /pp/ 即可完成文件的预览 /oo/ 用于倒叙预览文件,在一些流数据文件中比较方便。
