#+TITLE: =dapr= 在 =k8s= 下的部署
* 说明
在 =Kubernetes= 上部署基于 =Dapr= 应用，必须要先行部署一些 =Dapr= 的基础服务：
- =dapr-operator= :: 负责管理 =Dapr Component= 的更新和 =Kubernetes Service Endpoint= （ =State stores= ， =pub/sub= 等）；
- =dapr-sidecar-injector= :: 将 =Dapr= 的 =Sidecar= 注入带 =annotated deployment= 的 =Pods= 中，并添加环境变量 =DAPR_HTTP_PORT=
  和 =DAPR_GRPC_PORT= ，以使用户定义的应用程序能够轻松地与 =Dapr= 通信，而无需硬编码 =Dapr= 端口值；
- =dapr-placement= :: 用于 =Actor= ，创建将 =Actor= 实例映射到 =Pod= 的映射表；
- =dapr-sentry= :: 管理服务之间的 =mTLS= 并作为证书颁发机构。

薅一张官网的图：

[[file:overview_kubernetes.png][overview_kubernetes]]

* 准备工作
在 =Dapr= 的组件中会用到一些存储媒介（比如： =redis= ）,所以我们要把这些提前部署好。

如果用 =Dapr Cli= 初始化的时候，会自动帮我部署如下几个容器：

#+begin_src text
CONTAINER ID   IMAGE                    COMMAND                  CREATED         STATUS         PORTS                              NAMES
0dda6684dc2e   openzipkin/zipkin        "/busybox/sh run.sh"     2 minutes ago   Up 2 minutes   9410/tcp, 0.0.0.0:9411->9411/tcp   dapr_zipkin
9bf6ef339f50   redis                    "docker-entrypoint.s…"   2 minutes ago   Up 2 minutes   0.0.0.0:6379->6379/tcp             dapr_redis
8d993e514150   daprio/dapr              "./placement"            2 minutes ago   Up 2 minutes   0.0.0.0:6050->50005/tcp            dapr_placement   2 minutes ago   Up 2 minutes   0.0.0.0:6379->6379/tcp             dapr_redis
8d993e514150   daprio/dapr              "./placement"            2 minutes ago   Up 2 minutes   0.0.0.0:6050->50005/tcp            dapr_placement
#+end_src

所以在 =Kubernetes= 中需要我们自己部署好这些基础依赖。

** 这里我们部署最常用的 =redis= 。

#+begin_src shell
$ helm repo add bitnami https://charts.bitnami.com/bitnami
$ helm repo update
$ helm install redis bitnami/redis

NAME: redis
LAST DEPLOYED: Sat Sep 18 17:17:35 2021
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
 Please be patient while the chart is being deployed

Redis&trade; can be accessed on the following DNS names from within your cluster:

    redis-master.default.svc.cluster.local for read/write operations (port 6379)
    redis-replicas.default.svc.cluster.local for read-only operations (port 6379)

To get your password run:

    export REDIS_PASSWORD=$(kubectl get secret --namespace default redis -o jsonpath="{.data.redis-password}" | base64 --decode)

To connect to your Redis&trade; server:

1. Run a Redis&trade; pod that you can use as a client:

   kubectl run --namespace default redis-client --restart='Never'  --env REDIS_PASSWORD=$REDIS_PASSWORD  --image docker.io/bitnami/redis:6.2.5-debian-10-r34 --command -- sleep infinity

   Use the following command to attach to the pod:

   kubectl exec --tty -i redis-client \
   --namespace default -- bash

2. Connect using the Redis&trade; CLI:
   redis-cli -h redis-master -a $REDIS_PASSWORD
   redis-cli -h redis-replicas -a $REDIS_PASSWORD

To connect to your database from outside the cluster execute the following commands:

    kubectl port-forward --namespace default svc/redis-master 6379:6379 &
    redis-cli -h 127.0.0.1 -p 6379 -a $REDIS_PASSWORD
#+end_src

可以看一下启动的容器：
#+begin_src shell
➜ ~/work/documents kubectl get pods
NAME               READY   STATUS              RESTARTS   AGE
redis-master-0     0/1     ContainerCreating   0          12s
redis-replicas-0   0/1     ContainerCreating   0          12s
#+end_src

** 部署 =Statestore= 组件

部署脚本( =redis.yaml= )如下：
#+begin_src yaml
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: statestore
  namespace: default
spec:
  type: state.redis
  version: v1
  metadata:
  - name: redisHost
    value: redis-master:6379
  - name: redisPassword
    secretKeyRef:
      name: redis
      key: redis-password
auth:
  secretStore: kubernetes
#+end_src

部署一下：
#+begin_src shell
$ kubectl apply -f redis.yaml
component.dapr.io/statestore created
#+end_src

这样我们可以在 =Dapr Dashboard= 中看到这个组件：
[[file:redis-component]]
* 前奏
** 添加 =Helm= 库并更新
#+begin_src shell
helm repo add dapr https://dapr.github.io/helm-charts/
helm repo update
# See which chart versions are available
helm search repo dapr --devel --versions
#+end_src
** 将 =Dapr= 图表安装在你的集群的 =dapr-system= 命名空间中
#+begin_src shell
helm upgrade --install dapr dapr/dapr \
--version=1.4 \
--namespace dapr-system \
--create-namespace \
--wait
#+end_src
** 验证
#+begin_src shell
➜ ~ kubectl get pods --namespace dapr-system
NAME                                     READY   STATUS    RESTARTS   AGE
dapr-dashboard-6d86d866bb-lcjdl          1/1     Running   0          4d22h
dapr-operator-765955dd5d-bslbr           1/1     Running   22         4d22h
dapr-placement-server-0                  1/1     Running   21         4d22h
dapr-sentry-6cc5877dbf-w2knc             1/1     Running   21         4d22h
dapr-sidecar-injector-6979548599-4gwjp   1/1     Running   21         4d22h
#+end_src
* 相关维护
** 升级
1. 升级基础服务
#+begin_src shell
helm repo update
#+end_src

#+begin_src shell
helm upgrade dapr dapr/dapr --version [NEW VERSION] --namespace dapr-system --wait
#+end_src

2. 查看一下 =pod= 是否正常运行
#+begin_src shell
kubectl get pods -n dapr-system -w

NAME                                     READY   STATUS    RESTARTS   AGE
dapr-dashboard-69f5c5c867-mqhg4          1/1     Running   0          42s
dapr-operator-5cdd6b7f9c-9sl7g           1/1     Running   0          41s
dapr-placement-server-0                  1/1     Running   0          41s
dapr-sentry-84565c747b-7bh8h             1/1     Running   0          35s
dapr-sidecar-injector-68f868668f-6xnbt   1/1     Running   0          41s
#+end_src

3. 重新启动您的应用程序 =deployments= 以更新 =Dapr= 运行时
#+begin_src shell
kubectl rollout restart deploy/<DEPLOYMENT-NAME>
#+end_src
** 卸载
#+begin_src shell
helm uninstall dapr --namespace dapr-system
#+end_src
* 文档
- [[https://docs.dapr.io/zh-hans/operations/hosting/kubernetes/kubernetes-overview/][Kubernetes上的 Dapr]]
- [[https://kubernetes.io/docs/concepts/workloads/controllers/][Workload Resources]]
