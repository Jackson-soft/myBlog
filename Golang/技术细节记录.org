#+TITLE: ~一些技术细节记录~
* 数据结构
** ~map~ 的内存占用
   1. 线性增加
     + 当向map中添加新元素时，内存占用会增加。
     + 初始容量不足时，map会自动扩容，通常是按倍数增加其容量。这种扩容操作会导致内存占用大幅度增加，但总体趋势是线性增加的。
   2. 不可逆（内存不会自动收缩）
     + 当删除map中的元素时，内存占用不会自动减少。也就是说，map在扩容后即使元素减少，预分配的内存也不会释放。
     + 这种行为是为了避免频繁的内存分配和释放操作，从而提高性能。

   如果需要释放内存，可以通过创建一个新的map并将需要的元素复制过去来实现内存的回收。
** 切片
   切片的分配时尽量传入容量大小。性能上切片通过索引赋值性能要高于 ~append~ 。
