#+LATEX_CLASS: jacksoncy-org-article

#+TITLE: Golang 的 GC 探究

* 变量的生命同期
** 栈中的变量
** 堆中的变量
* 引用计数
  引用计数在现代语言的 =GC= 中已很少使用了，但是这个技术在目前的内存管理技术中是非常实用的。
* Golang 的内存分配（Tcmalloc)
  内存分配就目前来说优秀的大概就是 =glibc= 中的 =ptmalloc= 、 =facebook= 的 =jemalloc= 、 =google= 的 =tcmalloc= 。其中以 =ptmalloc= 应用最广泛，但后两者以架构优秀、性能高、不易出现内存碎片而
出名。而 =Golang= 出自 =google= 之手，内存分配自然是站在 =tcmalloc= 这个巨人的肩膀上啦。

* Golang 的 GC
* 参考文档

  [[http://goog-perftools.sourceforge.net/doc/tcmalloc.html][Thread-Caching Malloc]]

  [[https://github.com/qyuhen/book/blob/master/Go%201.5%20%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90%20%EF%BC%88%E4%B9%A6%E7%AD%BE%E7%89%88%EF%BC%89.pdf][Go 1.5 源码剖析]]

  [[https://zh.wikipedia.org/wiki/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8)][垃圾回收]]
